{"version":3,"sources":["pages/Board/components/Card/Card.tsx","pages/Board/components/List/List.tsx","pages/Board/Board.tsx","pages/Home/components/Board/Board.tsx","pages/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","card","title","List","list","cards","id","todo","map","toString","className","Board","props","state","lists","this","listItem","React","Component","generateRandomColor","red","Math","round","random","green","blue","board_id","useParams","link","to","style","backgroundColor","charAt","toUpperCase","slice","Home","boards","board","elements","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83695909.chunk.js","sourcesContent":["import React from 'react';\nimport ICard from '../../../../common/interfaces/ICard';\n\nexport default function Card(card: { key: string; card: ICard }): JSX.Element {\n  const { title } = card.card;\n  return <span>{title}</span>;\n}\n","import React from 'react';\nimport Card from '../Card/Card';\nimport IList from '../../../../common/interfaces/IList';\nimport ICard from '../../../../common/interfaces/ICard';\n\nexport default function List(list: IList): JSX.Element {\n  const { cards, title, id } = list;\n  const todo = cards.map((card: ICard) => <Card key={card.id.toString()} card={card} />);\n\n  return (\n    <div className=\"toDo-container\">\n      <h2 key={id}>{title}</h2>\n      <div className=\"inner_toDo-container\">{todo}</div>\n      <button>+ Добавить ещё одну карточку</button>\n    </div>\n  );\n}\n","import React from 'react';\nimport List from './components/List/List';\nimport IList from '../../common/interfaces/IList';\nimport './components/Board/board.scss';\nimport './components/Card/card.scss';\nimport './components/List/list.scss';\n\ninterface IBoard {\n  title: string;\n  lists: IList;\n}\n\nexport default class Board extends React.Component {\n  constructor(props: IBoard) {\n    super(props);\n    this.state = {\n      title: 'Моя тестовая доска',\n      lists: [\n        {\n          id: 1,\n          title: 'Планы',\n          cards: [\n            { id: 1, title: 'помыть кота' },\n            { id: 2, title: 'приготовить суп' },\n            { id: 3, title: 'сходить в магазин' },\n          ],\n        },\n        {\n          id: 2,\n          title: 'В процессе',\n          cards: [{ id: 4, title: 'посмотреть сериал' }],\n        },\n        {\n          id: 3,\n          title: 'Сделано',\n          cards: [\n            { id: 5, title: 'сделать домашку' },\n            { id: 6, title: 'погулять с собакой' },\n          ],\n        },\n      ],\n    };\n  }\n\n  render(): JSX.Element {\n    const { title, lists }: IList = this.state;\n    const list = lists.map((listItem: IList) => (\n      <List key={listItem.id} title={listItem.title} cards={listItem.cards} />\n    ));\n    return (\n      <div className=\"board-container\">\n        <h2 className=\"board-name\">{title}</h2>\n        <div className=\"inner_board-container\">\n          {list}\n          <button className=\"new-column\">+ Добавить ещё одну колонку</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport IBoardItem from '../../../../common/interfaces/IBoardItem';\n// eslint-disable-next-line import/order\nimport { Link, useParams } from 'react-router-dom';\n\nfunction generateRandomColor(): string {\n  const red = Math.round(Math.random() * 250);\n  const green = Math.round(Math.random() * 250);\n  const blue = Math.round(Math.random() * 250);\n  return `rgb(${red}, ${green}, ${blue})`;\n}\n\nexport default function Board(props: IBoardItem): JSX.Element {\n  const { title, id } = props;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const { board_id } = useParams(props);\n  const link = `/board/:${id}`;\n  return (\n    <Link to={link}>\n      <li style={{ backgroundColor: generateRandomColor() }}>\n        <p>{board_id}</p>\n        <span>{title.charAt(0).toUpperCase() + title.slice(1)}</span>\n      </li>\n    </Link>\n  );\n}\n","import React from 'react';\nimport Board from './components/Board/Board';\nimport IBoardItem from '../../common/interfaces/IBoardItem';\nimport './components/Board/board.scss';\n\ninterface IBoard {\n  [boards: string]: IBoardItem;\n}\n\nexport default class Home extends React.Component {\n  constructor(props: IBoard) {\n    super(props);\n    this.state = {\n      boards: [\n        { id: 1, title: 'покупки' },\n        { id: 2, title: 'подготовка к свадьбе' },\n        { id: 3, title: 'разработка интернет-магазина' },\n        { id: 4, title: 'курс по продвижению в соцсетях' },\n        { id: 5, title: 'изучаем реакт' },\n        { id: 6, title: 'изучить что-то новое' },\n      ],\n    };\n  }\n\n  render(): JSX.Element {\n    const { boards }: IBoard = this.state;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const board = boards.map((elements: IBoardItem) => (\n      <Board key={elements.id.toString()} title={elements.title} id={elements.id} />\n    ));\n    return (\n      <header className=\"App-header\">\n        <div className=\"home-container\">\n          <h1 className=\"main-text\">Мои доски</h1>\n          <div className=\"home_board-container\">\n            <ul>\n              {board}\n              <li>\n                <div>\n                  <p>+ Создать доску</p>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport './pages/App/app.scss';\nimport Board from './pages/Board/Board';\nimport Home from './pages/Home/Home';\n\nfunction App(): JSX.Element {\n  return (\n    <Router>\n      <div className=\"container\">\n        <div className=\"nav-container\">\n          <ul>\n            <li>\n              <Link to=\"my-trello-frontend\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/board/board_id\">Board</Link>\n            </li>\n          </ul>\n        </div>\n        <Switch>\n          <Route exact path=\"my-trello-frontend\">\n            <Home />\n          </Route>\n          <Route path=\"/board/:board_id\">\n            <Board />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}