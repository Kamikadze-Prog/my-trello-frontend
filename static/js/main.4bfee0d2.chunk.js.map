{"version":3,"sources":["pages/Home/components/Board/Board.tsx","pages/Home/components/OpenDialog.tsx","pages/Home/Home.tsx","pages/Board/components/Card/Card.tsx","pages/Board/components/List/List.tsx","pages/Board/Board.tsx","App.tsx","reportWebVitals.ts","store/modules/board/reducer.ts","store/modules/boards/reducer.ts","store/modules/user/reducer.ts","store/reducer.ts","store/store.ts","index.tsx"],"names":["generateRandomColor","red","Math","round","random","green","blue","Board","title","id","to","style","backgroundColor","charAt","toUpperCase","slice","modalRoot","document","getElementById","OpenDialog","props","el","createElement","appendChild","this","removeChild","className","ReactDOM","createPortal","children","React","Component","Home","state","showModal","value","boards","handleShow","bind","handleHide","handleChange","handleSubmit","onKeyPressHandler","event","keyCode","body","overflow","updateBodyStyles","setState","target","input","toString","length","border","alert","preventDefault","map","elements","modal","onSubmit","type","placeholder","onChange","onKeyDown","onClick","makeList","Card","card","makeCardList","cards","List","lists","listItem","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","board","action","user","store","createStore","rootReducer","dispatch","render","StrictMode"],"mappings":"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","file":"static/js/main.4bfee0d2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport IBoardItem from '../../../../common/interfaces/IBoardItem';\n\nfunction generateRandomColor(): string {\n  const red = Math.round(Math.random() * 250);\n  const green = Math.round(Math.random() * 250);\n  const blue = Math.round(Math.random() * 250);\n  return `rgb(${red}, ${green}, ${blue})`;\n}\n\nexport default function Board({ title, id }: IBoardItem): JSX.Element {\n  return (\n    <Link to={`/board/:${id}`}>\n      <li style={{ backgroundColor: generateRandomColor() }}>\n        <span>{title.charAt(0).toUpperCase() + title.slice(1)}</span>\n      </li>\n    </Link>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../openDialog.scss';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport default class OpenDialog extends React.Component {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  constructor(props) {\n    super(props);\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.el.className = 'dialog-block';\n    // eslint-disable-next-line react/destructuring-assignment,@typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    // eslint-disable-next-line react/destructuring-assignment\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n","import React, { ReactElement } from 'react';\n// import { connect } from 'react-redux';\n// import { getBoards } from '../../store/modules/boards/actions';\nimport Board from './components/Board/Board';\nimport IBoardItem from '../../common/interfaces/IBoardItem';\nimport './components/Board/board.scss';\nimport OpenDialog from './components/OpenDialog';\n\ntype PropsType = {\n  [boards: string]: IBoardItem;\n  // getBoards: () => Promise<void>;\n};\n\n// type StateType = {\n//   id: string;\n// };\n// class Home extends React.Component<StateType, PropsType> {\n\nexport default class Home extends React.Component {\n  constructor(props: PropsType) {\n    super(props);\n    this.state = {\n      showModal: false,\n      value: '',\n      boards: [\n        { id: 1, title: 'покупки' },\n        { id: 2, title: 'подготовка к свадьбе' },\n        { id: 3, title: 'разработка интернет-магазина' },\n        { id: 4, title: 'курс по продвижению в соцсетях' },\n        { id: 5, title: 'изучаем реакт' },\n        { id: 6, title: 'изучить что-то новое' },\n      ],\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onKeyPressHandler = this.onKeyPressHandler.bind(this);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  onKeyPressHandler(event) {\n    if (event.keyCode === 13) {\n      this.handleSubmit(event);\n    }\n  }\n\n  updateBodyStyles() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const { showModal } = this.state;\n    return showModal ? (document.body.style.overflow = 'visible') : (document.body.style.overflow = 'hidden');\n  }\n\n  handleShow() {\n    this.updateBodyStyles();\n    this.setState({ showModal: true });\n  }\n\n  handleHide() {\n    this.updateBodyStyles();\n    this.setState({ showModal: false });\n  }\n\n  handleChange(event: { target: { value: string } }) {\n    this.setState({ value: event.target.value });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  handleSubmit(event) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const { value } = this.state;\n    const input = document.getElementById('input-text');\n    // eslint-disable-next-line no-empty\n    if (value.toString().length === 0) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      input.style.border = '1px solid red';\n    } else {\n      // eslint-disable-next-line no-alert\n      alert(`Мы создали доску: ${value}`);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      input.style.border = '1px solid green';\n      event.preventDefault();\n    }\n  }\n\n  makeList(): ReactElement {\n    const { boards }: PropsType = this.state;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return boards.map((elements: IBoardItem) => (\n      <Board key={elements.id.toString()} title={elements.title} id={elements.id} />\n    ));\n  }\n\n  render(): JSX.Element {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const { value } = this.state;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    // eslint-disable-next-line react/destructuring-assignment\n    const modal = this.state.showModal ? (\n      <OpenDialog>\n        <div className=\"dialog-block_form\" onSubmit={this.handleSubmit}>\n          <div className=\"dialog-block_input\">\n            <input\n              id=\"input-text\"\n              type=\"text\"\n              placeholder=\"Добавить заголовок доски\"\n              value={value}\n              onChange={this.handleChange}\n              onKeyDown={this.onKeyPressHandler}\n            />\n            <button onClick={this.handleHide}>x</button>\n          </div>\n          <input type=\"submit\" value=\"Создать\" onClick={this.handleSubmit} />\n        </div>\n      </OpenDialog>\n    ) : null;\n    return (\n      <header className=\"App-header\">\n        <div className=\"home-container\">\n          <h1 className=\"main-text\">Мои доски</h1>\n          <div className=\"home_board-container\">\n            <ul>\n              {this.makeList()}\n              <button className=\"make-board\" onClick={this.handleShow}>\n                <p>+ Создать доску</p>\n              </button>\n              {modal}\n            </ul>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n// const mapStateToProps = (state) => ({\n//   ...state.boards,\n// });\n// export default connect(mapStateToProps, {})(Home);\n","import React from 'react';\nimport ICard from '../../../../common/interfaces/ICard';\nimport './card.scss';\n\ninterface CardProps {\n  key: string;\n  card: ICard;\n}\n\nexport default function Card(card: CardProps): JSX.Element {\n  const { title } = card.card;\n  return <span className=\"card-element\">{title}</span>;\n}\n","import React, { ReactElement } from 'react';\nimport Card from '../Card/Card';\nimport IList from '../../../../common/interfaces/IList';\nimport ICard from '../../../../common/interfaces/ICard';\nimport './list.scss';\n\nfunction makeCardList(cards: IList): ReactElement[] {\n  return cards.map((card: ICard) => <Card key={card.id.toString()} card={card} />);\n}\n\nexport default function List({ title, id, cards }: IList): JSX.Element {\n  return (\n    <div className=\"todo-container\">\n      <h2 key={id}>{title}</h2>\n      <div className=\"inner_todo-container\">{makeCardList(cards)}</div>\n      <button className=\"btn\">+ Добавить ещё одну карточку</button>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport List from './components/List/List';\nimport IList from '../../common/interfaces/IList';\nimport './components/Board/board.scss';\nimport { IBoard } from '../../common/interfaces/IBoard';\n\nexport default class Board extends React.Component {\n  constructor(props: IBoard) {\n    super(props);\n    this.state = {\n      title: 'Моя тестовая доска',\n      lists: [\n        {\n          id: 1,\n          title: 'Планы',\n          cards: [\n            { id: 1, title: 'помыть кота' },\n            { id: 2, title: 'приготовить суп' },\n            { id: 3, title: 'сходить в магазин' },\n          ],\n        },\n        {\n          id: 2,\n          title: 'В процессе',\n          cards: [{ id: 4, title: 'посмотреть сериал' }],\n        },\n        {\n          id: 3,\n          title: 'Сделано',\n          cards: [\n            { id: 5, title: 'сделать домашку' },\n            { id: 6, title: 'погулять с собакой' },\n          ],\n        },\n      ],\n    };\n  }\n\n  makeList(): ReactElement {\n    const { lists }: IList = this.state;\n    return lists.map((listItem: IList) => (\n      <List key={listItem.id.toString()} title={listItem.title} cards={listItem.cards} />\n    ));\n  }\n\n  render(): JSX.Element {\n    const { title }: IList = this.state;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const { id } = this.props;\n    return (\n      <div className=\"board-container\">\n        <h2 className=\"board-name\">\n          {`${id}-`}\n          {title}\n        </h2>\n        <div className=\"inner_board-container\">\n          {this.makeList()}\n          <button className=\"new-column btn\">+ Добавить ещё одну колонку</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport './pages/App/app.scss';\nimport Home from './pages/Home/Home';\nimport Board from './pages/Board/Board';\n\nfunction App(): JSX.Element {\n  return (\n    <Router>\n      <div className=\"container\">\n        <div className=\"nav-container\">\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n          </ul>\n        </div>\n        <Switch>\n          <Route component={Board} path=\"/board/:id\" exact />\n          <Route component={Home} path=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport default function reducer(state = initialState, action: { type: string }) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-shadow,@typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  // eslint-disable-next-line @typescript-eslint/no-shadow,@typescript-eslint/no-unused-vars\n  const initialState: BoardState = {\n    users: [],\n    lists: [],\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function boardReducer() {}\n  switch (action.type) {\n    default: {\n      return { ...state };\n    }\n  }\n  return 0;\n}\n","const initialState = {};\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport default function reducer(state = initialState, action) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-shadow,@typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  // eslint-disable-next-line @typescript-eslint/no-shadow,@typescript-eslint/no-unused-vars\n  const initialState: BoardsState = {\n    boards: [],\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function boardsReducer() {}\n\n  switch (action.type) {\n    case 'UPDATE_BOARDS':\n      return {\n        ...state,\n        boards: action.boards,\n      };\n    default: {\n      return { ...state };\n    }\n  }\n}\n","const initialState = {};\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport default function reducer(state = initialState, action: { type: string }) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-shadow,@typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  // eslint-disable-next-line @typescript-eslint/no-shadow,@typescript-eslint/no-unused-vars\n  const initialState: UserState = {\n    user: [],\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function userReducer() {}\n\n  switch (action.type) {\n    default: {\n      return { ...state };\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport boardReducer from './modules/board/reducer';\nimport boardsReducer from './modules/boards/reducer';\nimport userReducer from './modules/user/reducer';\n\nexport default combineReducers({\n  board: boardReducer,\n  boards: boardsReducer,\n  user: userReducer,\n});\n","import { createStore } from 'redux';\nimport rootReducer from './reducer';\n\nexport interface AppState {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  board: BoardState; // эти интерфейсы нужно описать в редьюсерах соответствующих\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  boards: BoardsState;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  user: UserState;\n}\n// const initialState: AppState = {\nconst initialState = {\n  board: {},\n  boards: [],\n  user: {},\n};\n\nconst store = createStore(rootReducer, initialState);\n\nexport const asyncDispatch = store.dispatch;\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}